<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAAABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAKIEAACtMQUFoGgTE3dPFRVsHAEBqkkJCZVqGBdpNgUFmCECAqZdDQ2IYBsaXiIAAKoyBASjZhEQ
        fkglI0UOCwu0MQkJw7MHB8fsDg6xzBAQoZYICMXUCQnD6xAQpa8NDbKiBwfI5gsLvN8REZ6YCgq/vAcH
        x+sODrLFGBeCRhscvV8hIdfrGhri/yEh1PcdHcDnHx/c/h0d4f8fH8jsHx/J7hwc4f8fH9z8HR2/5SEh
        1fgaGuL/IiLU7BwcrmQiIb00NTbTvDc72/kyM83DJybBhTc32t43N9v0LCzFni0uyp03O9vyNjjU4CYk
        v4U0NdPANzvb+DQ0zr0gHrcxDH9nEBiDfoUbhIPsG3hvoRIpg0cQELq3EhK25RMVkHIWenJgG4WE3Rt9
        eckZaFhOGIB9hxyCg+gbcm+cH1JDIRuxZUUgyHHSHdJ1/SC/b+gWSJbADg3P7gwM0fwUI6/XHqhyzx7S
        dfogyXL0Hqlhwx7EcN8c0XX8IL1t3h+PVFomtWxUNNGB4zPdhv8zzYLwJVql1Cop4PkpKOX/JzrC4y2x
        guI03Yb/NNiE+Cm6cNQzz4DxMt2H/zPQgeQkr2hYIq1mGjnDfoZBzYbHN8N7jCZRo044ONOpOjnWwSw2
        wGgtp3xvN7CJ4TSpgcsmomZZNMB5nzjFfvAytXKlIZpaIQAAAAAhol8MLatoHiGlWw0AAH0BJiWxFCcn
        sxsKCKcNBw+zawkYteQLF6rVEjR8bRa0Y6AXvGjxGaVdtR5zRDUQoFcAMLVyADu+ewAvt28AGjubADIy
        xAA0NMYAFBSvHRoay8UTE9v/FxXW+xtNndsmx3nwI9h9/yfJd+whoV9oAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABoasBYvL9CuMjLj+zIy3+0nWKeqOM2C1zvciPs5z4HUJbNqSAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAFBZ8CLCzBOTg4zoc0NMpwHT2hKCJ6iYMneZDnJHJ7lx5iThsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABwehAAAAAAAMC5AGAQCOAwkHsysJCsK/BwrG+Q0Os8wYFYRJAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYF68AJye4ACMjtwAaGrtTIyPX8Bsb4v8iItTsHB2vYwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAISG6KjY31bc5OeDoNTbUryAh
        ui4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoKowMpKbwyMDHDWyco
        uy8HBqYE//8AAIABAACAAQAAgAEAAImRAACAAQAAgAEAAImRAAD/kQAA/wEAAP8BAAD/sQAA//EAAP/x
        AAD/8QAA//8AAA==
</value>
  </data>
</root>